{"version":3,"sources":["pages1.js"],"names":["after","t","pages","load","is","length","delete","p","content","afterOutput","output"],"mappings":";;AAAA;;AACA;;;;;;AAEA,cAAKA,KAAL,CAAW,QAAX,EAAqB,MAAMC,CAAN,IAAS;;AAE1B,QAAIC,QAAQ,YAAU,QAAV,CAAZ;;AAEA,UAAMA,MAAMC,IAAN,CAAW,CAAC,eAAD,CAAX,CAAN;;AAEAF,MAAEG,EAAF,CAAKF,MAAMG,MAAX,EAAmB,CAAnB;;AAEA,UAAMH,MAAMI,MAAN,EAAN;;AAEA,UAAMJ,MAAMC,IAAN,EAAN;;AAEAF,MAAEG,EAAF,CAAKF,MAAMG,MAAX,EAAmB,CAAnB;AACH,CAbD;;AAeA,mBAAK,MAAL,EAAa,MAAMJ,CAAN,IAAS;AAClB,QAAIC,QAAQ,YAAU,QAAV,CAAZ;AACA;AACA,QAAIK,IAAI,MAAML,MAAMC,IAAN,CAAW,cAAX,CAAd;AACAF,MAAEG,EAAF,CAAKG,EAAEL,KAAF,CAAQ,CAAR,EAAWM,OAAhB,EAAyB,KAAzB;AACH,CALD;;AAQA,mBAAK,QAAL,EAAe,MAAMP,CAAN,IAAS;AACpB,QAAIC,QAAQ,YAAU,QAAV,EAAoB;AAC5BO,oBAAYP,KAAZ,EAAkB;AACd,mBAAOA,MAAMC,IAAN,EAAP;AACH;AAH2B,KAApB,CAAZ;AAKA,UAAMD,MAAMC,IAAN,CAAW,CAAC,cAAD,CAAX,CAAN;AACA,QAAII,IAAI,MAAML,MAAMQ,MAAN,CAAa,eAAb,CAAd;AACAT,MAAEG,EAAF,CAAKG,EAAEL,KAAF,CAAQ,CAAR,EAAWM,OAAhB,EAAyB,KAAzB;AACH,CATD;;AAYA","file":"pages1.js","sourcesContent":["import {Pages} from '../';\nimport test from 'ava';\n\ntest.after('delete', async t=>{\n\n    let pages = new Pages('./test');\n\n    await pages.load(['./store1/*.md']);\n\n    t.is(pages.length, 3);\n\n    await pages.delete();\n\n    await pages.load();\n\n    t.is(pages.length, 0);\n});\n\ntest('load', async t=>{\n    let pages = new Pages('./test');\n    //console.log('pages ', pages);\n    let p = await pages.load('./stuff/*.md');\n    t.is(p.pages[0].content, '1\\n');\n});\n\n\ntest('output', async t=>{\n    let pages = new Pages('./test', {\n        afterOutput(pages){\n            return pages.load();\n        }\n    });\n    await pages.load(['./stuff/*.md']);\n    let p = await pages.output('./test/store1');\n    t.is(p.pages[0].content, '1\\n');\n});\n\n\n/*\npages1.load().then(pages=>{\n    pages.forEach(page=>{\n        console.log(page.content);\n    });\n    console.log('pages ', pages);\n    for(let page of pages){\n        console.log('page ',page);\n    }\n});\n\npages1.load();\npages1.output('store1').then((pages)=>{\n    console.log(pages);\n    console.log('done');\n    return new Pages({pages});\n}).then(pages=>{\n    console.log(pages.pages);\n    setTimeout(()=>{\n        for(let page of pages){\n            //console.log(page);\n            page.delete();\n        }\n    }, 4000);\n\n}).catch(e=>{\n    console.error(e);\n});*/\n"]}