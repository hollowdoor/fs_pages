{"version":3,"sources":["run.js"],"names":["before","t","pages","globs","p","load","console","log","is","content"],"mappings":";;AAAA;;AACA;;;;;;AAEA,cAAKA,MAAL,CAAYC,KAAG,CAEd,CAFD;;AAIA,mBAAK,MAAL,EAAa,MAAMA,CAAN,IAAS;AAClB,QAAIC,QAAQ,YAAU,EAACC,OAAM,gBAAP,EAAV,CAAZ;AACA;AACA,QAAIC,IAAI,MAAMF,MAAMG,IAAN,EAAd;AACAC,YAAQC,GAAR,CAAYH,EAAE,CAAF,CAAZ;AACAH,MAAEO,EAAF,CAAKJ,EAAE,CAAF,EAAKK,OAAV,EAAmB,GAAnB;AACH,CAND;AAOA;;;;;;;;AAQA","file":"run.js","sourcesContent":["import {Pages} from '../';\nimport test from 'ava';\n\ntest.before(t=>{\n\n});\n\ntest('load', async t=>{\n    let pages = new Pages({globs:'./test/stuff/*'});\n    //console.log('pages ', pages);\n    let p = await pages.load();\n    console.log(p[0]);\n    t.is(p[0].content, '1');\n});\n/*\ntest('output', async t=>{\n    let pages = new Pages({globs:'./stuff/*'});\n    await pages.load();\n    let p = await pages.output();\n\n    t.is(p[0].content, 1);\n});*/\n/*\npages1.load().then(pages=>{\n    pages.forEach(page=>{\n        console.log(page.content);\n    });\n    console.log('pages ', pages);\n    for(let page of pages){\n        console.log('page ',page);\n    }\n});\n\npages1.load();\npages1.output('store1').then((pages)=>{\n    console.log(pages);\n    console.log('done');\n    return new Pages({pages});\n}).then(pages=>{\n    console.log(pages.pages);\n    setTimeout(()=>{\n        for(let page of pages){\n            //console.log(page);\n            page.delete();\n        }\n    }, 4000);\n\n}).catch(e=>{\n    console.error(e);\n});*/\n"]}